{"ast":null,"code":"import data from \"../services/data.json\";\n\nconst getLabelOptions = (label, onSelectFilterOption) => {\n  return data.reduce((acc, option) => {\n    if (!acc.some(e => e.label === option[label])) acc.push({\n      label: option[label],\n      onChange: onSelectFilterOption\n    });\n    return acc;\n  }, []);\n};\n\nexport const getAccordionOptions = onSelectFilterOption => {\n  const accordionOptions = [\"location\", \"contract\", \"level\"];\n  return accordionOptions.map((option, index) => {\n    return {\n      id: `${index}`,\n      label: option,\n      options: getLabelOptions(option, onSelectFilterOption)\n    };\n  });\n};\n\nconst checkPositionAndCompany = (keyword, job) => {\n  return job.position.toLowerCase().indexOf(keyword.toLowerCase()) > -1 || job.company.toLowerCase().indexOf(keyword.toLowerCase()) > -1;\n};\n\nexport const getSearchOptions = keyword => {\n  return data.filter(job => checkPositionAndCompany(keyword, job));\n};\n\nconst getFilteredOption = (arr, option, keyword, id) => {\n  return arr.filter(job => job[option].toLowerCase().indexOf(keyword.toLowerCase()) > -1 || job[option].toLowerCase().indexOf(keyword.toLowerCase()) > -1);\n};\n\nexport const getFilteredOptions = filterKeywords => {\n  return filterKeywords.reduce((acc, filter) => {\n    let filteredOption = [];\n    if (!acc.length) filteredOption = getFilteredOption(data, filter.optionSelected, filter.keyword);else filteredOption = getFilteredOption(acc.flat(), filter.optionSelected, filter.keyword);\n    console.log(\"filteredOption\", filteredOption);\n    acc.push(filteredOption);\n    return acc;\n  }, []);\n};","map":{"version":3,"sources":["/Users/inescarneiro/Documents/Playground/interplanetary-job-board/src/utilities/utilities.tsx"],"names":["data","getLabelOptions","label","onSelectFilterOption","reduce","acc","option","some","e","push","onChange","getAccordionOptions","accordionOptions","map","index","id","options","checkPositionAndCompany","keyword","job","position","toLowerCase","indexOf","company","getSearchOptions","filter","getFilteredOption","arr","getFilteredOptions","filterKeywords","filteredOption","length","optionSelected","flat","console","log"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,oBAAR,KAAiC;AACrD,SAAOH,IAAI,CAACI,MAAL,CAAY,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAChC,QAAI,CAACD,GAAG,CAACE,IAAJ,CAASC,CAAC,IAAIA,CAAC,CAACN,KAAF,KAAYI,MAAM,CAACJ,KAAD,CAAhC,CAAL,EACIG,GAAG,CAACI,IAAJ,CAAS;AAACP,MAAAA,KAAK,EAAEI,MAAM,CAACJ,KAAD,CAAd;AAAuBQ,MAAAA,QAAQ,EAAEP;AAAjC,KAAT;AAEJ,WAAOE,GAAP;AACH,GALM,EAKJ,EALI,CAAP;AAMH,CAPD;;AASA,OAAO,MAAMM,mBAAmB,GAAIR,oBAAD,IAA0B;AACzD,QAAMS,gBAAgB,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,OAAzB,CAAzB;AAEA,SAAOA,gBAAgB,CAACC,GAAjB,CAAqB,CAACP,MAAD,EAASQ,KAAT,KAAmB;AAC3C,WAAO;AAACC,MAAAA,EAAE,EAAG,GAAED,KAAM,EAAd;AAAiBZ,MAAAA,KAAK,EAAEI,MAAxB;AAAgCU,MAAAA,OAAO,EAAEf,eAAe,CAACK,MAAD,EAASH,oBAAT;AAAxD,KAAP;AACH,GAFM,CAAP;AAGH,CANM;;AAQP,MAAMc,uBAAuB,GAAG,CAACC,OAAD,EAAUC,GAAV,KAAkB;AAC9C,SAAOA,GAAG,CAACC,QAAJ,CAAaC,WAAb,GAA2BC,OAA3B,CAAmCJ,OAAO,CAACG,WAAR,EAAnC,IAA4D,CAAC,CAA7D,IAAkEF,GAAG,CAACI,OAAJ,CAAYF,WAAZ,GAA0BC,OAA1B,CAAkCJ,OAAO,CAACG,WAAR,EAAlC,IAA2D,CAAC,CAArI;AACH,CAFD;;AAIA,OAAO,MAAMG,gBAAgB,GAAIN,OAAD,IAAa;AACzC,SAAOlB,IAAI,CAACyB,MAAL,CAAaN,GAAD,IAASF,uBAAuB,CAACC,OAAD,EAAUC,GAAV,CAA5C,CAAP;AACH,CAFM;;AAKP,MAAMO,iBAAiB,GAAG,CAACC,GAAD,EAAMrB,MAAN,EAAcY,OAAd,EAAuBH,EAAvB,KAA8B;AACpD,SAAOY,GAAG,CAACF,MAAJ,CAAYN,GAAD,IAASA,GAAG,CAACb,MAAD,CAAH,CAAYe,WAAZ,GAA0BC,OAA1B,CAAkCJ,OAAO,CAACG,WAAR,EAAlC,IAA2D,CAAC,CAA5D,IAAiEF,GAAG,CAACb,MAAD,CAAH,CAAYe,WAAZ,GAA0BC,OAA1B,CAAkCJ,OAAO,CAACG,WAAR,EAAlC,IAA2D,CAAC,CAAjJ,CAAP;AACH,CAFD;;AAIA,OAAO,MAAMO,kBAAkB,GAAIC,cAAD,IAAoB;AAClD,SAAOA,cAAc,CAACzB,MAAf,CAAsB,CAACC,GAAD,EAAMoB,MAAN,KAAiB;AAC1C,QAAIK,cAAc,GAAG,EAArB;AACA,QAAG,CAACzB,GAAG,CAAC0B,MAAR,EACID,cAAc,GAAGJ,iBAAiB,CAAC1B,IAAD,EAAOyB,MAAM,CAACO,cAAd,EAA8BP,MAAM,CAACP,OAArC,CAAlC,CADJ,KAGIY,cAAc,GAAGJ,iBAAiB,CAACrB,GAAG,CAAC4B,IAAJ,EAAD,EAAaR,MAAM,CAACO,cAApB,EAAoCP,MAAM,CAACP,OAA3C,CAAlC;AACJgB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,cAA9B;AACAzB,IAAAA,GAAG,CAACI,IAAJ,CAASqB,cAAT;AACA,WAAOzB,GAAP;AACH,GATM,EASJ,EATI,CAAP;AAUH,CAXM","sourcesContent":["import data from \"../services/data.json\";\n\nconst getLabelOptions = (label, onSelectFilterOption) => {\n    return data.reduce((acc, option) => {\n        if (!acc.some(e => e.label === option[label]))\n            acc.push({label: option[label], onChange: onSelectFilterOption});\n\n        return acc;\n    }, []);\n}\n\nexport const getAccordionOptions = (onSelectFilterOption) => {\n    const accordionOptions = [\"location\", \"contract\", \"level\"];\n\n    return accordionOptions.map((option, index) => {\n        return {id: `${index}`, label: option, options: getLabelOptions(option, onSelectFilterOption)};\n    });\n}\n\nconst checkPositionAndCompany = (keyword, job) => {\n    return job.position.toLowerCase().indexOf(keyword.toLowerCase()) > -1 || job.company.toLowerCase().indexOf(keyword.toLowerCase()) > -1\n}\n\nexport const getSearchOptions = (keyword) => {\n    return data.filter((job) => checkPositionAndCompany(keyword, job));\n}\n\n\nconst getFilteredOption = (arr, option, keyword, id) => {\n    return arr.filter((job) => job[option].toLowerCase().indexOf(keyword.toLowerCase()) > -1 || job[option].toLowerCase().indexOf(keyword.toLowerCase()) > -1);\n}\n\nexport const getFilteredOptions = (filterKeywords) => {\n    return filterKeywords.reduce((acc, filter) => {\n        let filteredOption = [];\n        if(!acc.length) \n            filteredOption = getFilteredOption(data, filter.optionSelected, filter.keyword);\n        else \n            filteredOption = getFilteredOption(acc.flat(), filter.optionSelected, filter.keyword);\n        console.log(\"filteredOption\", filteredOption);\n        acc.push(filteredOption);\n        return acc;\n    }, [])\n}"]},"metadata":{},"sourceType":"module"}