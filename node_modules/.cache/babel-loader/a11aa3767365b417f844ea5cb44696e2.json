{"ast":null,"code":"var _jsxFileName = \"/Users/inescarneiro/Documents/Playground/interplanetary-job-board/src/views/board.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport BoardPage from \"../components/pages/board\";\nimport data from \"../services/data.json\";\nimport { getAccordionOptions, getSearchOptions, getFilteredJobsByOption, getAccordionFilters } from \"../utilities/utilities\";\nimport \"normalize.css\";\nimport \"./board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoardView = () => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [jobs, setJobs] = useState(data);\n  const [filterKeywords, setfilterKeywords] = useState(getAccordionFilters);\n  const [clearFilterActive, setClearFilter] = useState(false);\n\n  const onSelectFilterOption = e => {\n    const optionSelected = e.target.getAttribute(\"data-parent\");\n    const keyword = e.target.name;\n\n    if (!filterKeywords.get(optionSelected).some(key => key === keyword)) {\n      const prevKeys = filterKeywords.get(optionSelected);\n      setfilterKeywords(new Map(filterKeywords.set(optionSelected, [...prevKeys, keyword])));\n    } else {\n      const newKeys = filterKeywords.get(optionSelected).filter(key => key !== keyword);\n      setfilterKeywords(new Map(filterKeywords.set(optionSelected, [...newKeys])));\n    }\n  };\n\n  const handleSearch = e => {\n    const userInput = e.target.value;\n    setInput(userInput);\n    setJobs(getSearchOptions(userInput));\n  };\n\n  const clearFilters = () => {\n    setfilterKeywords(new Map(getAccordionFilters()));\n    setClearFilter(true);\n  };\n\n  useEffect(() => {\n    setClearFilter(!clearFilterActive);\n  }, []);\n  useEffect(() => {\n    const filteredOptions = getFilteredJobsByOption(filterKeywords);\n    setJobs(filteredOptions);\n    if ([...filterKeywords.values()].flat().length === 0) setJobs(data);\n  }, [filterKeywords]);\n  return /*#__PURE__*/_jsxDEV(BoardPage, {\n    jobs: jobs,\n    clearFilters: clearFilters,\n    accordionOptions: getAccordionOptions(onSelectFilterOption, clearFilterActive),\n    handleSearch: handleSearch,\n    searchInput: input\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n\n_s(BoardView, \"+KNhy3PW32xSBqOaJKLkPiMZmrM=\");\n\n_c = BoardView;\nexport default BoardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardView\");","map":{"version":3,"sources":["/Users/inescarneiro/Documents/Playground/interplanetary-job-board/src/views/board.tsx"],"names":["useState","useEffect","BoardPage","data","getAccordionOptions","getSearchOptions","getFilteredJobsByOption","getAccordionFilters","BoardView","input","setInput","jobs","setJobs","filterKeywords","setfilterKeywords","clearFilterActive","setClearFilter","onSelectFilterOption","e","optionSelected","target","getAttribute","keyword","name","get","some","key","prevKeys","Map","set","newKeys","filter","handleSearch","userInput","value","clearFilters","filteredOptions","values","flat","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport BoardPage from \"../components/pages/board\";\nimport data from \"../services/data.json\";\nimport { getAccordionOptions, getSearchOptions, getFilteredJobsByOption, getAccordionFilters } from \"../utilities/utilities\";\nimport \"normalize.css\";\nimport \"./board.css\";\n\nconst BoardView = () => {\n    const [input, setInput] = useState(\"\");\n    const [jobs, setJobs] = useState(data);\n    const [filterKeywords, setfilterKeywords] = useState(getAccordionFilters);\n    const [clearFilterActive, setClearFilter] = useState(false);\n\n    const onSelectFilterOption = (e) => {\n        const optionSelected = e.target.getAttribute(\"data-parent\");\n        const keyword = e.target.name;\n\n        if (!filterKeywords.get(optionSelected).some(key => key === keyword)) {\n            const prevKeys = filterKeywords.get(optionSelected);\n            setfilterKeywords(new Map(filterKeywords.set(optionSelected, [...prevKeys, keyword])));\n        }\n        else {\n            const newKeys = filterKeywords.get(optionSelected).filter((key) => key !== keyword);\n            setfilterKeywords(new Map(filterKeywords.set(optionSelected, [...newKeys])));\n        }\n\n    }\n\n    const handleSearch = (e) => {\n        const userInput = e.target.value;\n        setInput(userInput);\n        setJobs(getSearchOptions(userInput));\n    }\n\n    const clearFilters = () => {\n        setfilterKeywords(new Map(getAccordionFilters()));\n        setClearFilter(true);\n    };\n\n    useEffect(() => {\n        setClearFilter(!clearFilterActive);\n    }, []);\n\n\n    useEffect(() => {\n        const filteredOptions = getFilteredJobsByOption(filterKeywords);\n        setJobs(filteredOptions);\n\n        if ([...filterKeywords.values()].flat().length === 0)\n            setJobs(data);\n\n    }, [filterKeywords]);\n\n    return <BoardPage jobs={jobs} clearFilters={clearFilters} accordionOptions={getAccordionOptions(onSelectFilterOption, clearFilterActive)} handleSearch={handleSearch} searchInput={input} />\n}\n\nexport default BoardView;"]},"metadata":{},"sourceType":"module"}