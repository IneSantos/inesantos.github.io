{"ast":null,"code":"var _jsxFileName = \"/Users/inescarneiro/Documents/Playground/interplanetary-job-board/src/views/board.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport BoardPage from \"../components/pages/board\";\nimport data from \"../services/data.json\";\nimport { getAccordionOptions, getSearchOptions, getFilteredOptions, getAccordionFilters } from \"../utilities/utilities\";\nimport \"normalize.css\";\nimport \"./board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoardView = () => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [jobs, setJobs] = useState(data);\n  const [filterKeywords, setfilterKeywords] = useState(getAccordionFilters);\n\n  const onSelectFilterOption = e => {\n    const optionSelected = e.target.getAttribute(\"data-parent\");\n    const keyword = e.target.name;\n\n    if (!filterKeywords.get(optionSelected).some(key => key === keyword)) {\n      console.log(\"dentro do if\");\n      const prevKeys = filterKeywords.get(optionSelected);\n      setfilterKeywords(filterKeywords.set(optionSelected, [...prevKeys, keyword]));\n    } else {\n      const newKeys = filterKeywords.get(optionSelected).filter(key => key.keyword === keyword);\n      setfilterKeywords(filterKeywords.set(optionSelected, [...newKeys]));\n    }\n  };\n\n  const handleSearch = e => {\n    const userInput = e.target.value;\n    setInput(userInput);\n    setJobs(getSearchOptions(userInput));\n  };\n\n  const clearAll = () => {//setfilterKeywords([]);\n  };\n\n  useEffect(() => {\n    const filteredOptions = getFilteredOptions(filterKeywords); // if(filteredOptions.length) \n    //     setJobs(filteredOptions);\n    // else // error case\n    //     setJobs(data);\n  }, [[...filterKeywords.values()]]);\n  return /*#__PURE__*/_jsxDEV(BoardPage, {\n    jobs: jobs,\n    accordionOptions: getAccordionOptions(onSelectFilterOption),\n    handleSearch: handleSearch,\n    searchInput: input\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n\n_s(BoardView, \"yMt3QEz/XqHkYZUmMixgO98sOjQ=\");\n\n_c = BoardView;\nexport default BoardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardView\");","map":{"version":3,"sources":["/Users/inescarneiro/Documents/Playground/interplanetary-job-board/src/views/board.tsx"],"names":["useState","useEffect","BoardPage","data","getAccordionOptions","getSearchOptions","getFilteredOptions","getAccordionFilters","BoardView","input","setInput","jobs","setJobs","filterKeywords","setfilterKeywords","onSelectFilterOption","e","optionSelected","target","getAttribute","keyword","name","get","some","key","console","log","prevKeys","set","newKeys","filter","handleSearch","userInput","value","clearAll","filteredOptions","values"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,EAAgDC,kBAAhD,EAAoEC,mBAApE,QAA+F,wBAA/F;AACA,OAAO,eAAP;AACA,OAAO,aAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACG,IAAD,CAAhC;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAACO,mBAAD,CAApD;;AAEA,QAAMQ,oBAAoB,GAAIC,CAAD,IAAO;AACjC,UAAMC,cAAc,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsB,aAAtB,CAAvB;AACA,UAAMC,OAAO,GAAGJ,CAAC,CAACE,MAAF,CAASG,IAAzB;;AAEA,QAAI,CAACR,cAAc,CAACS,GAAf,CAAmBL,cAAnB,EAAmCM,IAAnC,CAAwCC,GAAG,IAAIA,GAAG,KAAKJ,OAAvD,CAAL,EAAsE;AAClEK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACC,YAAMC,QAAQ,GAAGd,cAAc,CAACS,GAAf,CAAmBL,cAAnB,CAAjB;AACAH,MAAAA,iBAAiB,CAACD,cAAc,CAACe,GAAf,CAAmBX,cAAnB,EAAmC,CAAC,GAAGU,QAAJ,EAAcP,OAAd,CAAnC,CAAD,CAAjB;AACJ,KAJD,MAKK;AACA,YAAMS,OAAO,GAAGhB,cAAc,CAACS,GAAf,CAAmBL,cAAnB,EAAmCa,MAAnC,CAA2CN,GAAD,IAASA,GAAG,CAACJ,OAAJ,KAAgBA,OAAnE,CAAhB;AACAN,MAAAA,iBAAiB,CAACD,cAAc,CAACe,GAAf,CAAmBX,cAAnB,EAAmC,CAAC,GAAGY,OAAJ,CAAnC,CAAD,CAAjB;AACJ;AACH,GAbD;;AAeA,QAAME,YAAY,GAAIf,CAAD,IAAO;AACxB,UAAMgB,SAAS,GAAGhB,CAAC,CAACE,MAAF,CAASe,KAA3B;AACAvB,IAAAA,QAAQ,CAACsB,SAAD,CAAR;AACApB,IAAAA,OAAO,CAACP,gBAAgB,CAAC2B,SAAD,CAAjB,CAAP;AACH,GAJD;;AAMA,QAAME,QAAQ,GAAG,MAAM,CACnB;AACH,GAFD;;AAKAjC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkC,eAAe,GAAG7B,kBAAkB,CAACO,cAAD,CAA1C,CADY,CAGZ;AACA;AACA;AACA;AACH,GAPQ,EAON,CAAC,CAAE,GAAGA,cAAc,CAACuB,MAAf,EAAL,CAAD,CAPM,CAAT;AASA,sBAAO,QAAC,SAAD;AAAW,IAAA,IAAI,EAAEzB,IAAjB;AAAuB,IAAA,gBAAgB,EAAEP,mBAAmB,CAACW,oBAAD,CAA5D;AAAoF,IAAA,YAAY,EAAEgB,YAAlG;AAAgH,IAAA,WAAW,EAAEtB;AAA7H;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAzCD;;GAAMD,S;;KAAAA,S;AA2CN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport BoardPage from \"../components/pages/board\";\nimport data from \"../services/data.json\";\nimport { getAccordionOptions, getSearchOptions, getFilteredOptions, getAccordionFilters } from \"../utilities/utilities\";\nimport \"normalize.css\";\nimport \"./board.css\";\n\nconst BoardView = () => {\n    const [input, setInput] = useState(\"\");\n    const [jobs, setJobs] = useState(data);\n    const [filterKeywords, setfilterKeywords] = useState(getAccordionFilters);\n\n    const onSelectFilterOption = (e) => {\n       const optionSelected = e.target.getAttribute(\"data-parent\");\n       const keyword = e.target.name;\n       \n       if (!filterKeywords.get(optionSelected).some(key => key === keyword)) {\n           console.log(\"dentro do if\")\n            const prevKeys = filterKeywords.get(optionSelected);\n            setfilterKeywords(filterKeywords.set(optionSelected, [...prevKeys, keyword]));\n       }\n       else {\n            const newKeys = filterKeywords.get(optionSelected).filter((key) => key.keyword === keyword)\n            setfilterKeywords(filterKeywords.set(optionSelected, [...newKeys]));\n       }\n    }\n\n    const handleSearch = (e) => {\n        const userInput = e.target.value;\n        setInput(userInput);\n        setJobs(getSearchOptions(userInput));\n    }\n\n    const clearAll = () => {\n        //setfilterKeywords([]);\n    };\n\n\n    useEffect(() => {\n        const filteredOptions = getFilteredOptions(filterKeywords);\n\n        // if(filteredOptions.length) \n        //     setJobs(filteredOptions);\n        // else // error case\n        //     setJobs(data);\n    }, [[ ...filterKeywords.values()]]);\n\n    return <BoardPage jobs={jobs} accordionOptions={getAccordionOptions(onSelectFilterOption)} handleSearch={handleSearch} searchInput={input}/>\n}\n\nexport default BoardView;"]},"metadata":{},"sourceType":"module"}