{"ast":null,"code":"var _jsxFileName = \"/Users/inescarneiro/Documents/Playground/interplanetary-job-board/src/components/atomic-ui/atoms/checkbox/checkbox.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./checkbox.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkbox = ({\n  label,\n  onChange\n}) => {\n  _s();\n\n  const [value, setValue] = useState(false);\n\n  const updateValue = () => {\n    setValue(prevState => !prevState);\n    onChange();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"checkbox-input\",\n      type: \"checkbox\",\n      checked: value,\n      onChange: updateValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), label]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkbox, \"HfkdrTZbv6ig6ZNY/1nxKCooDOU=\");\n\n_c = Checkbox;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["/Users/inescarneiro/Documents/Playground/interplanetary-job-board/src/components/atomic-ui/atoms/checkbox/checkbox.tsx"],"names":["useState","Checkbox","label","onChange","value","setValue","updateValue","prevState"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAuC;AAAA;;AACpD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAACE,SAAS,IAAI,CAACA,SAAf,CAAR;AACAJ,IAAAA,QAAQ;AACX,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAmC,MAAA,IAAI,EAAC,UAAxC;AAAmD,MAAA,OAAO,EAAEC,KAA5D;AAAmE,MAAA,QAAQ,EAAEE;AAA7E;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKJ,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAdD;;GAAMD,Q;;KAAAA,Q;AAgBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\nimport { CheckboxType } from \"./checkbox-type\"\nimport \"./checkbox.css\";\n\nconst Checkbox = ({ label, onChange }: CheckboxType) => {\n    const [value, setValue] = useState(false);\n\n    const updateValue = () => {\n        setValue(prevState => !prevState);\n        onChange();\n    }\n\n    return (\n        <label>\n            <input className=\"checkbox-input\"  type=\"checkbox\" checked={value} onChange={updateValue} />\n            {label}\n        </label>\n    );\n};\n\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}