{"ast":null,"code":"var _jsxFileName = \"/Users/inescarneiro/Documents/Playground/interplanetary-job-board/src/components/pages/board.tsx\";\nimport JobBoard from \"../templates/job-board\";\nimport \"./board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = props => {\n  const {\n    jobs,\n    clearFilters,\n    accordionOptions,\n    searchInput,\n    handleSearch\n  } = props;\n  return /*#__PURE__*/_jsxDEV(JobBoard, {\n    jobs: jobs,\n    clearFilters: clearFilters,\n    accordionOptions: accordionOptions,\n    searchInput: searchInput,\n    handleSearch: handleSearch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Board;\nBoard.defaultProps = {\n  jobs: [],\n  accordionOptions: []\n};\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/inescarneiro/Documents/Playground/interplanetary-job-board/src/components/pages/board.tsx"],"names":["JobBoard","Board","props","jobs","clearFilters","accordionOptions","searchInput","handleSearch","defaultProps"],"mappings":";AAEA,OAAOA,QAAP,MAAqB,wBAArB;AACA,OAAO,aAAP;;;AAUA,MAAMC,KAAK,GAAIC,KAAD,IAAkB;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,gBAAtB;AAAwCC,IAAAA,WAAxC;AAAqDC,IAAAA;AAArD,MAAsEL,KAA5E;AACA,sBAAO,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,IAAhB;AAAsB,IAAA,YAAY,EAAEC,YAApC;AAAkD,IAAA,gBAAgB,EAAEC,gBAApE;AAAsF,IAAA,WAAW,EAAEC,WAAnG;AAAgH,IAAA,YAAY,EAAEC;AAA9H;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAHD;;KAAMN,K;AAKNA,KAAK,CAACO,YAAN,GAAqB;AACjBL,EAAAA,IAAI,EAAE,EADW;AAEjBE,EAAAA,gBAAgB,EAAE;AAFD,CAArB;AAKA,eAAeJ,KAAf","sourcesContent":["import { Card } from \"../atomic-ui/organisms/job-card/card-type\";\nimport { AccordionCheckboxType } from \"../atomic-ui/molecules/accordion-checkbox/accordion-checkbox-type\";\nimport JobBoard from \"../templates/job-board\";\nimport \"./board.css\";\n\ninterface Props {\n    jobs: Card[],\n    clearFilters: () => void,\n    accordionOptions: AccordionCheckboxType[],\n    searchInput: string,\n    handleSearch: (e: { target: HTMLInputElement }) => void\n}\n\nconst Board = (props: Props) => {\n    const { jobs, clearFilters, accordionOptions, searchInput, handleSearch } = props;\n    return <JobBoard jobs={jobs} clearFilters={clearFilters} accordionOptions={accordionOptions} searchInput={searchInput} handleSearch={handleSearch}/>\n}\n\nBoard.defaultProps = {\n    jobs: [],\n    accordionOptions: []\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}