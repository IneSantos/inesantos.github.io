{"ast":null,"code":"import data from \"../services/data.json\";\n\nconst getLabelOptions = (label, onChange) => {\n  return data.reduce((acc, option) => {\n    console.log(acc);\n    console.log(acc.includes({\n      label: option[label],\n      onChange\n    }));\n    if (!acc.includes({\n      label: option[label],\n      onChange\n    })) acc.push({\n      label: option[label],\n      onChange\n    });\n    return acc;\n  }, []);\n};\n\nexport const getAccordionOptions = onChange => {\n  const accordionOptions = [\"location\", \"contract\"];\n  return accordionOptions.map((option, index) => {\n    return {\n      id: index,\n      label: option,\n      options: getLabelOptions(option, onChange)\n    };\n  });\n};","map":{"version":3,"sources":["/Users/inescarneiro/Documents/Playground/interplanetary-job-board/src/utilities/utilities.tsx"],"names":["data","getLabelOptions","label","onChange","reduce","acc","option","console","log","includes","push","getAccordionOptions","accordionOptions","map","index","id","options"],"mappings":"AACA,OAAOA,IAAP,MAAiB,uBAAjB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAOH,IAAI,CAACI,MAAL,CAAY,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,QAAJ,CAAa;AAACP,MAAAA,KAAK,EAAEI,MAAM,CAACJ,KAAD,CAAd;AAAuBC,MAAAA;AAAvB,KAAb,CAAZ;AAEA,QAAI,CAACE,GAAG,CAACI,QAAJ,CAAa;AAACP,MAAAA,KAAK,EAAEI,MAAM,CAACJ,KAAD,CAAd;AAAuBC,MAAAA;AAAvB,KAAb,CAAL,EACIE,GAAG,CAACK,IAAJ,CAAS;AAACR,MAAAA,KAAK,EAAEI,MAAM,CAACJ,KAAD,CAAd;AAAuBC,MAAAA;AAAvB,KAAT;AAEJ,WAAOE,GAAP;AACH,GARM,EAQJ,EARI,CAAP;AASH,CAVD;;AAYA,OAAO,MAAMM,mBAAmB,GAAIR,QAAD,IAAc;AAC7C,QAAMS,gBAAgB,GAAG,CAAC,UAAD,EAAa,UAAb,CAAzB;AAEA,SAAOA,gBAAgB,CAACC,GAAjB,CAAqB,CAACP,MAAD,EAASQ,KAAT,KAAmB;AAC3C,WAAO;AAACC,MAAAA,EAAE,EAAED,KAAL;AAAYZ,MAAAA,KAAK,EAAEI,MAAnB;AAA2BU,MAAAA,OAAO,EAAEf,eAAe,CAACK,MAAD,EAASH,QAAT;AAAnD,KAAP;AACH,GAFM,CAAP;AAGH,CANM","sourcesContent":["import { convertCompilerOptionsFromJson } from \"typescript\";\nimport data from \"../services/data.json\";\n\nconst getLabelOptions = (label, onChange) => {\n    return data.reduce((acc, option) => {\n        console.log(acc);\n        console.log(acc.includes({label: option[label], onChange}));\n\n        if (!acc.includes({label: option[label], onChange}))\n            acc.push({label: option[label], onChange});\n\n        return acc;\n    }, []);\n}\n\nexport const getAccordionOptions = (onChange) => {\n    const accordionOptions = [\"location\", \"contract\"];\n\n    return accordionOptions.map((option, index) => {\n        return {id: index, label: option, options: getLabelOptions(option, onChange)};\n    });\n}"]},"metadata":{},"sourceType":"module"}