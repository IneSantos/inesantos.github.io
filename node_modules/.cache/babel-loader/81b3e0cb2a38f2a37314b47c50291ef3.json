{"ast":null,"code":"import _toConsumableArray from\"/Users/inescarneiro/Documents/Playground/inesantos.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/inescarneiro/Documents/Playground/inesantos.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import BoardPage from\"../components/pages/board\";import data from\"../services/data.json\";import{getAccordionOptions,getSearchOptions,getFilteredJobsByOption,getAccordionFilters}from\"../utilities/utilities\";import\"normalize.css\";import\"./board.css\";import{jsx as _jsx}from\"react/jsx-runtime\";var BoardView=function BoardView(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState(data),_useState4=_slicedToArray(_useState3,2),jobs=_useState4[0],setJobs=_useState4[1];var _useState5=useState(getAccordionFilters),_useState6=_slicedToArray(_useState5,2),filterKeywords=_useState6[0],setfilterKeywords=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),clearFilterActive=_useState8[0],setClearFilter=_useState8[1];var onSelectFilterOption=function onSelectFilterOption(e){var optionSelected=e.target.getAttribute(\"data-parent\");var keyword=e.target.name;if(!filterKeywords.get(optionSelected).some(function(key){return key===keyword;})){var prevKeys=filterKeywords.get(optionSelected);setfilterKeywords(new Map(filterKeywords.set(optionSelected,[].concat(_toConsumableArray(prevKeys),[keyword]))));}else{var newKeys=filterKeywords.get(optionSelected).filter(function(key){return key!==keyword;});setfilterKeywords(new Map(filterKeywords.set(optionSelected,_toConsumableArray(newKeys))));}};var handleSearch=function handleSearch(e){var userInput=e.target.value;setInput(userInput);setJobs(getSearchOptions(userInput));};var clearFilters=function clearFilters(){setfilterKeywords(new Map(getAccordionFilters()));if(_toConsumableArray(filterKeywords.values()).flat().length>0)setClearFilter(true);};useEffect(function(){setClearFilter(false);},[]);useEffect(function(){var filteredOptions=getFilteredJobsByOption(filterKeywords);setJobs(filteredOptions);if(_toConsumableArray(filterKeywords.values()).flat().length===0){setJobs(data);setClearFilter(false);}},[filterKeywords]);return/*#__PURE__*/_jsx(BoardPage,{jobs:jobs,clearFilters:clearFilters,accordionOptions:getAccordionOptions(onSelectFilterOption,clearFilterActive),handleSearch:handleSearch,searchInput:input});};export default BoardView;","map":{"version":3,"sources":["/Users/inescarneiro/Documents/Playground/inesantos.github.io/src/views/board.tsx"],"names":["useState","useEffect","BoardPage","data","getAccordionOptions","getSearchOptions","getFilteredJobsByOption","getAccordionFilters","BoardView","input","setInput","jobs","setJobs","filterKeywords","setfilterKeywords","clearFilterActive","setClearFilter","onSelectFilterOption","e","optionSelected","target","getAttribute","keyword","name","get","some","key","prevKeys","Map","set","newKeys","filter","handleSearch","userInput","value","clearFilters","values","flat","length","filteredOptions"],"mappings":"8WAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,OAASC,mBAAT,CAA8BC,gBAA9B,CAAgDC,uBAAhD,CAAyEC,mBAAzE,KAAoG,wBAApG,CACA,MAAO,eAAP,CACA,MAAO,aAAP,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,cAA0BR,QAAQ,CAAC,EAAD,CAAlC,wCAAOS,KAAP,eAAcC,QAAd,eACA,eAAwBV,QAAQ,CAACG,IAAD,CAAhC,yCAAOQ,IAAP,eAAaC,OAAb,eACA,eAA4CZ,QAAQ,CAACO,mBAAD,CAApD,yCAAOM,cAAP,eAAuBC,iBAAvB,eACA,eAA4Cd,QAAQ,CAAC,KAAD,CAApD,yCAAOe,iBAAP,eAA0BC,cAA1B,eAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,CAAD,CAAO,CAChC,GAAMC,CAAAA,cAAc,CAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsB,aAAtB,CAAvB,CACA,GAAMC,CAAAA,OAAO,CAAGJ,CAAC,CAACE,MAAF,CAASG,IAAzB,CAEA,GAAI,CAACV,cAAc,CAACW,GAAf,CAAmBL,cAAnB,EAAmCM,IAAnC,CAAwC,SAAAC,GAAG,QAAIA,CAAAA,GAAG,GAAKJ,OAAZ,EAA3C,CAAL,CAAsE,CAClE,GAAMK,CAAAA,QAAQ,CAAGd,cAAc,CAACW,GAAf,CAAmBL,cAAnB,CAAjB,CACAL,iBAAiB,CAAC,GAAIc,CAAAA,GAAJ,CAAQf,cAAc,CAACgB,GAAf,CAAmBV,cAAnB,8BAAuCQ,QAAvC,GAAiDL,OAAjD,GAAR,CAAD,CAAjB,CACH,CAHD,IAIK,CACD,GAAMQ,CAAAA,OAAO,CAAGjB,cAAc,CAACW,GAAf,CAAmBL,cAAnB,EAAmCY,MAAnC,CAA0C,SAACL,GAAD,QAASA,CAAAA,GAAG,GAAKJ,OAAjB,EAA1C,CAAhB,CACAR,iBAAiB,CAAC,GAAIc,CAAAA,GAAJ,CAAQf,cAAc,CAACgB,GAAf,CAAmBV,cAAnB,oBAAuCW,OAAvC,EAAR,CAAD,CAAjB,CACH,CAEJ,CAbD,CAeA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACd,CAAD,CAAO,CACxB,GAAMe,CAAAA,SAAS,CAAGf,CAAC,CAACE,MAAF,CAASc,KAA3B,CACAxB,QAAQ,CAACuB,SAAD,CAAR,CACArB,OAAO,CAACP,gBAAgB,CAAC4B,SAAD,CAAjB,CAAP,CACH,CAJD,CAMA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBrB,iBAAiB,CAAC,GAAIc,CAAAA,GAAJ,CAAQrB,mBAAmB,EAA3B,CAAD,CAAjB,CAEA,GAAI,mBAAIM,cAAc,CAACuB,MAAf,EAAJ,EAA6BC,IAA7B,GAAoCC,MAApC,CAA6C,CAAjD,CACItB,cAAc,CAAC,IAAD,CAAd,CACP,CALD,CAOAf,SAAS,CAAC,UAAM,CACZe,cAAc,CAAC,KAAD,CAAd,CACH,CAFQ,CAEN,EAFM,CAAT,CAKAf,SAAS,CAAC,UAAM,CACZ,GAAMsC,CAAAA,eAAe,CAAGjC,uBAAuB,CAACO,cAAD,CAA/C,CACAD,OAAO,CAAC2B,eAAD,CAAP,CAEA,GAAI,mBAAI1B,cAAc,CAACuB,MAAf,EAAJ,EAA6BC,IAA7B,GAAoCC,MAApC,GAA+C,CAAnD,CAAqD,CACjD1B,OAAO,CAACT,IAAD,CAAP,CACAa,cAAc,CAAC,KAAD,CAAd,CACH,CAEJ,CATQ,CASN,CAACH,cAAD,CATM,CAAT,CAWA,mBAAO,KAAC,SAAD,EAAW,IAAI,CAAEF,IAAjB,CAAuB,YAAY,CAAEwB,YAArC,CAAmD,gBAAgB,CAAE/B,mBAAmB,CAACa,oBAAD,CAAuBF,iBAAvB,CAAxF,CAAmI,YAAY,CAAEiB,YAAjJ,CAA+J,WAAW,CAAEvB,KAA5K,EAAP,CACH,CAnDD,CAqDA,cAAeD,CAAAA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport BoardPage from \"../components/pages/board\";\nimport data from \"../services/data.json\";\nimport { getAccordionOptions, getSearchOptions, getFilteredJobsByOption, getAccordionFilters } from \"../utilities/utilities\";\nimport \"normalize.css\";\nimport \"./board.css\";\n\nconst BoardView = () => {\n    const [input, setInput] = useState(\"\");\n    const [jobs, setJobs] = useState(data);\n    const [filterKeywords, setfilterKeywords] = useState(getAccordionFilters);\n    const [clearFilterActive, setClearFilter] = useState(false);\n\n    const onSelectFilterOption = (e) => {\n        const optionSelected = e.target.getAttribute(\"data-parent\");\n        const keyword = e.target.name;\n\n        if (!filterKeywords.get(optionSelected).some(key => key === keyword)) {\n            const prevKeys = filterKeywords.get(optionSelected);\n            setfilterKeywords(new Map(filterKeywords.set(optionSelected, [...prevKeys, keyword])));\n        }\n        else {\n            const newKeys = filterKeywords.get(optionSelected).filter((key) => key !== keyword);\n            setfilterKeywords(new Map(filterKeywords.set(optionSelected, [...newKeys])));\n        }\n\n    }\n\n    const handleSearch = (e) => {\n        const userInput = e.target.value;\n        setInput(userInput);\n        setJobs(getSearchOptions(userInput));\n    }\n\n    const clearFilters = () => {\n        setfilterKeywords(new Map(getAccordionFilters()));\n\n        if ([...filterKeywords.values()].flat().length > 0) \n            setClearFilter(true);\n    };\n\n    useEffect(() => {\n        setClearFilter(false);\n    }, []);\n\n\n    useEffect(() => {\n        const filteredOptions = getFilteredJobsByOption(filterKeywords);\n        setJobs(filteredOptions);\n\n        if ([...filterKeywords.values()].flat().length === 0){\n            setJobs(data);\n            setClearFilter(false);\n        }\n\n    }, [filterKeywords]);\n\n    return <BoardPage jobs={jobs} clearFilters={clearFilters} accordionOptions={getAccordionOptions(onSelectFilterOption, clearFilterActive)} handleSearch={handleSearch} searchInput={input} />\n}\n\nexport default BoardView;"]},"metadata":{},"sourceType":"module"}